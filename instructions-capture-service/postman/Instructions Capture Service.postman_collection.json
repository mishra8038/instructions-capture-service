{
	"info": {
		"_postman_id": "a05f3f87-809a-4b7e-bf77-406243e49855",
		"name": "Instructions Capture Service",
		"description": "Postman tests for CSV/JSON ingestion, transformation, and health of the Instructions Capture Service.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27016534"
	},
	"item": [
		{
			"name": "Health: /actuator/health",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test('Health is UP', function () {",
							"  var json = pm.response.json();",
							"  pm.expect(json.status || json.components?.['ping']?.status).to.eql('UP');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/actuator/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"actuator",
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST JSON: /api/v1/trades/instruction",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
							"pm.test('Response is JSON object', function () { pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json'); });",
							"const json = pm.response.json();",
							"pm.test('Account is masked to last 4 digits', function () {",
							"  pm.expect(json.account).to.match(/^\\*+\\d{4}$/);",
							"  pm.expect(json.account.endsWith('3210')).to.be.true;",
							"});",
							"pm.test('Security uppercased', function () { pm.expect(json.security).to.eql('ABC1234'); });",
							"pm.test('Type normalized to single char', function () { pm.expect(json.type).to.eql('B'); });",
							"pm.test('Amount and timestamp preserved', function () {",
							"  pm.expect(json.amount).to.eql(100000);",
							"  pm.expect(json.timestamp).to.exist;",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"platform_id\": \"ACCT123\",\n  \"trade\": {\n    \"account\": \"9876543210\",\n    \"security\": \"abc1234\",\n    \"type\": \"Buy\",\n    \"amount\": 100000,\n    \"timestamp\": \"2025-08-04T21:15:33Z\"\n  }\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/trade/instruction",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"trade",
						"instruction"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Upload CSV: /api/v1/trade/instrument/upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
							"pm.test('Response is JSON array', function () {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
							"  const body = pm.response.json();",
							"  pm.expect(Array.isArray(body)).to.be.true;",
							"  pm.expect(body.length).to.be.greaterThan(0);",
							"});",
							"const arr = pm.response.json();",
							"pm.test('First record masked + normalized', function () {",
							"  const t = arr[0];",
							"  pm.expect(t.account).to.match(/^\\*+\\d{4}$/);",
							"  pm.expect(t.security).to.eql('ABC1234');",
							"  pm.expect(['B','S','C','U']).to.include(t.type);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"contentType": "",
							"type": "file",
							"src": "/home/x/dev/virtusa-MishraAishwarya/ws/instructions-capture-service/src/test/resources/testdata/sample.csv"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/trade/instruction/upload",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"trade",
						"instruction",
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Upload JSON: /api/v1/trade/instrument/upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
							"pm.test('Response is JSON array', function () {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
							"  const body = pm.response.json();",
							"  pm.expect(Array.isArray(body)).to.be.true;",
							"  pm.expect(body.length).to.be.greaterThan(0);",
							"});",
							"const arr = pm.response.json();",
							"pm.test('First record masked + normalized', function () {",
							"  const t = arr[0];",
							"  pm.expect(t.account).to.match(/^\\*+\\d{4}$/);",
							"  pm.expect(t.security).to.eql('ABC1234');",
							"  pm.expect(['B','S','C','U']).to.include(t.type);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"contentType": "",
							"type": "file",
							"src": "/home/x/dev/virtusa-MishraAishwarya/ws/instructions-capture-service/src/test/resources/testdata/sample.json"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/trade/instruction/upload",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"trade",
						"instruction",
						"upload"
					]
				}
			},
			"response": []
		}
	]
}