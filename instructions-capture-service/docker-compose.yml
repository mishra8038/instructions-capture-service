services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
      - "9093:9093"
    healthcheck:
      test: [ "CMD-SHELL", "echo 'test-message' | /bin/kafka-console-producer --bootstrap-server localhost:9092 --topic health-check-topic && /bin/kafka-console-consumer --bootstrap-server localhost:9092 --topic health-check-topic --from-beginning --max-messages 3 | grep 'test-message'" ]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 2s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "10001:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    #depends_on:
    #  kafka:
    #   condition: service_healthy

  app:
    build: .
    image: instructions-capture-service:0.1.0
    container_name: instructions-capture-service
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - JAVA_TOOL_OPTIONS=-XX:+UseZGC -XX:InitialRAMPercentage=60 -XX:MaxRAMPercentage=70
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - "8080:8080"
    #depends_on:
    #  kafka:
    #    condition: service_healthy